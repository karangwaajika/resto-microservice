server:
  port: ${SERVER_PORT}

spring:
  application:
    name: order-service

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  config:
    import: optional:configserver:${CONFIG-SERVER-URL}

  kafka:
    bootstrap-servers: pkc-619z3.us-east1.gcp.confluent.cloud:9092
    properties:
      sasl.mechanism: PLAIN
      security.protocol: SASL_SSL
      sasl.jaas.config: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username='${KAFKA_API_KEY}'
        password='${KAFKA_API_SECRET}';
      session.timeout.ms: 45000

    consumer:
      group-id: my-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: org.exercise.event.UserCreatedEvent
        spring.json.trusted.packages: "*"
  rabbitmq:
    host: ${RABBIT_HOSTNAME}
    port: ${RABBIT_PORT}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    virtual-host: ${RABBIT_VHOST}
    ssl:
      enabled: true
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA-CLIENT-URL}
